# # Преобразование строки в целое число
# # Для преобразования строки в целое число, мы используем команду int():

# # num = int(input())  # преобразование считанной строки в целое число
# # Для преобразования строки в целое число не обязательно использовать команду input().

# # Следующий код преобразует строку 12345 в целое число:

# # n = int('12345')  # преобразование строки в целое число

# # Если строка не является числом, то при преобразовании возникнет ошибка.

# # Целочисленные операторы
# # Язык Python предоставляет четыре основных арифметических оператора для работы с целыми числами (+, −, *, /), а также три дополнительных (% для остатка, // для целочисленного деления и ** для возведения в степень).

# # Следующая программа демонстрирует все целочисленные операторы:

# # a = 13
# # b = 7

# # total = a + b
# # diff = a - b
# # prod = a * b
# # div1 = a / b
# # div2 = a // b
# # mod = a % b
# # exp = a ** b

# # print(a, '+', b, '=', total)
# # print(a, '-', b, '=', diff)
# # print(a, '*', b, '=', prod)
# # print(a, '/', b, '=', div1)
# # print(a, '//', b, '=', div2)
# # print(a, '%', b, '=', mod)
# # print(a, '**', b, '=', exp)
# # В результате работы такой программы будет выведено:

# # 13 + 7 = 20
# # 13 - 7 = 6
# # 13 * 7 = 91
# # 13 / 7 = 1.8571428571428572
# # 13 // 7 = 1
# # 13 % 7 = 6
# # 13 ** 7 = 62748517
# # При обычном делении (/) получается число не являющееся целым. Деление на ноль приводит к ошибке.

# # Длинная арифметика
# # Отличительной особенностью языка Python является неограниченность целочисленного типа данных. По факту, размер числа зависит только от наличия свободной памяти на компьютере. Это отличает Python от таких языков как C++, C, C#, Java где переменные целого типа данных имеют ограничение. Например,  в языке C# диапазон целых чисел ограничен от 
# # −
# # 2
# # 63
# # −2 
# # 63
# #   до 
# # 2
# # 63
# # −
# # 1
# # 2 
# # 63
# #  −1.

# # atom = 10 ** 80  # количество атомов во вселенной
# # print('Количество атомов =', atom)

# # Числа с плавающей точкой
# # Наравне с целыми числами в Python есть возможность работы с дробными (вещественными) числами. Так, например, числа 
# # 2
# # 3
# # ,
# # 2
# # ,
# # �
# # 3
# # 2
# # ​
# #  , 
# # 2
# # ​
# #  ,π – являются вещественными и целого типа int недостаточно для их представления.

# # Дробные (вещественные) числа в информатике называют числами с плавающей точкой.

# # Для представления чисел с плавающей точкой в Python используется тип данных float.

# # e = 2.71828  # литерал с плавающей точкой
# # pi = 3.1415  # литерал с плавающей точкой

# # Преобразование строки к числу с плавающей точкой
# # Для преобразования строки к числу с плавающей точкой мы используем команду float():

# # num = float(input()) # преобразование считанной строки в число с плавающей точкой
# # Для преобразования строки к числу с плавающей точкой необязательно использовать команду input().

# # Следующий код преобразует строку 1.2345 к числу с плавающей точкой:

# # n = float('1.2345')  # преобразование строки к числу с плавающей точкой
# # Если строка не является числом, то при преобразовании возникнет ошибка.

# # Арифметические операторы
# # Язык Python предоставляет четыре основных арифметических оператора для работы с числами с плавающей точкой (+, −, *, /) и один дополнительный (** – для возведения в степень).

# # Следующая программа демонстрирует арифметические операторы:

# # a = 13.5
# # b = 2.0

# # total = a + b
# # diff = a - b
# # prod = a * b
# # div = a / b
# # exp = a ** b

# # print(a, '+', b, '=', total)
# # print(a, '-', b, '=', diff)
# # print(a, '*', b, '=', prod)
# # print(a, '/', b, '=', div)
# # print(a, '**', b, '=', exp)
# # В результате работы такой программы будет выведено:

# # 13.5 + 2.0 = 15.5
# # 13.5 - 2.0 = 11.5
# # 13.5 * 2.0 = 27.0
# # 13.5 / 2.0 = 6.75
# # 13.5 ** 2.0 = 182.25
# # Деление на ноль приводит к ошибке.

# # Преобразование между int и float
# # Неявное преобразование. Любое целое число (тип int) можно использовать там, где ожидается число с плавающей точкой (тип float), поскольку при необходимости Python автоматически преобразует целые числа в числа с плавающей точкой.

# # Явное преобразование. Число с плавающей точкой нельзя неявно преобразовать в целое число. Для такого преобразования необходимо использовать явное преобразование с помощью команды int().

# # num1 = 17.89
# # num2 = -13.56
# # num3 = int(num1)
# # num4 = int(num2)
# # print(num3)
# # print(num4)
# # Результатом выполнения такого кода будет:

# # 17
# # -13
# # Обратите внимание, что преобразование чисел с плавающей точкой в целое производится с округлением в сторону нуля, то есть int(1.7) = 1, int(-1.7) = -1.

# # Не путайте операцию преобразования и округления. Для округления чисел с плавающей точкой используются дополнительные команды. О них расскажем позже.

# # Площадь треугольника
# # Напишите программу, которая считывает длины двух катетов в прямоугольном треугольнике и выводит его площадь.

# # a,b = float(input()), float(input())
# # print(float(1/2*a*b))

# # Две старушки
# # Две старушки идут навстречу друг другу с постоянными скоростями 
# # �
# # 1
# # V 
# # 1
# # ​
# #   и 
# # �
# # 2
# # V 
# # 2
# # ​
# #   км/ч. Определите, через какое время (в часах) старушки встретятся, если расстояние между ними равно 
# # �
# # S км.

# # s = float(input())
# # v1 = float(input())
# # v2 = float(input())
# # print(float(s/(v1+v2)))

# Обратное число
# Напишите программу, которая считывает с клавиатуры одно число и выводит обратное ему. Если при этом введённое с клавиатуры число – ноль, то вывести «Обратного числа не существует» (без кавычек).

# Формат входных данных 
# На вход программе подается одно действительное число.

# Формат выходных данных
# Программа должна вывести действительное число обратное данному, либо текст в соответствии с условием задачи.

# a = float(input())
# if a != 0:
#     print(a**-1)
# else: print('Обратного числа не существует')

# 451 градус по Фаренгейту 
# У известного американского писателя Рэя Бредбери есть роман «451 градус по Фаренгейту». Напишите программу, которая определяет, какой температуре по шкале Цельсия соответствует указанное значение по шкале Фаренгейта.

# Используйте формулу для перевода: 
# �
# =
# 5
# 9
# (
# �
# −
 
# 32
# )
# C= 
# 9
# 5
# ​
#  (F− 32).

# Формат входных данных
# На вход программе подаётся вещественное число градусов по шкале Фаренгейта.

# Формат выходных данных
# Программа должна вывести число градусов по шкале Цельсия.

# a = float(input())
# print(float(5/9*(a - 32)))

# Dog age
# На вход программе подается число 
# �
# n – количество собачьих лет. Напишите программу, которая вычисляет возраст собаки в человеческих годах.

# Формат входных данных
# На вход программе подаётся натуральное число – количество собачьих лет.

# Формат выходных данных
# Программа должна вывести возраст собаки в человеческих годах.

# Примечание. В течение первых двух лет собачий год равен 
# 10.5
# 10.5 человеческим годам. После этого каждый год собаки равен 
# 4
# 4 человеческим годам.

# a = int(input())
# if a == 1:
#     print(float(10.5))
# elif a == 2:
#     print(float(10.5*2))
# else: print(int((a-2)*4)+(21))

# Первая цифра после точки
# Дано положительное действительное число. Выведите его первую цифру после десятичной точки.

# Формат входных данных
# На вход программе подается положительное действительное число.

# Формат выходных данных
# Программа должна вывести цифру в соответствии с условием задачи.

# a = float(input())
# b = int(a*10)
# c = b % 10
# print(c)


# Дробная часть
# Дано положительное действительное число. Выведите его дробную часть.

# Формат входных данных
# На вход программе подается положительное действительное число.

# Формат выходных данных
# Программа должна вывести дробную часть числа в соответствии с условием задачи.

# Примечание. Числа с плавающей точкой (тип float) в Python хранятся в неточном виде, что связано с ограниченным количеством выделенных для них байт в памяти. Поэтому ваша программа может выдавать дробную часть от числа не в ожидаемом виде. Например, для числа 44.45 остаток может выглядеть как:

# 0.45000000000000284
# Наша проверяющая система засчитает как 0.45, так и 0.45000000000000284 правильными ответами.

# a = float(input())
# print(a % int(a))

# Встроенные функции
# Python включает много заранее определенных функций. Программист не видит их реализацию, она скрыта. Достаточно знать, как эти функции называются и что они делают.

# Мы уже сталкивались с встроенными функциями:

# print() — вывести на экран;
# input() — считать с клавиатуры;
# int() — преобразовать к целому числу;
# float() — преобразовать к числу с плавающей точкой.
# Рассмотрим три новые встроенные функции, которые используются достаточно часто при работе с числами.

# Функции min() и max()
# Для определения соответственно минимального или максимального значения используются функции min() и max(). Аргументов у этих функций может быть любое количество, главное, чтобы они все поддерживали между собой операцию сравнения (например, float и int поддерживают сравнение, а float и str - нет).

# Например, результатом выполнения следующего кода:

# a = max(3, 8, -3, 12, 9)
# b = min(3, 8, -3, 12, 9)
# c = max(3.14, 2.17, 9.8)
# print(a)
# print(b)
# print(c)
# будет:

# 12
# -3
# 9.8
# Функция abs()
# Модулем (абсолютной величиной) положительного числа называется само число, модулем отрицательного числа называется противоположное ему число, модуль нуля – нуль. Модуль числа 
# �
# a обозначается 
# ∣
# �
# ∣
# ∣a∣, для него имеет место равенство:

# ∣
# �
# ∣
 
# =
# {
# �
# ,
# если  
# �
# >
# 0
 
# 0
# ,
# если  
# �
# =
# 0
 
# −
# �
# ,
# если  
# �
# <
# 0
 
# ∣a∣ = 
# ⎩
# ⎨
# ⎧
# ​
  
# a,
# 0,
# −a,
# ​
  
# если  a>0 
# если  a=0 
# если  a<0 
# ​
 

# Для нахождения модуля (абсолютной величины) числа в Python используется функция abs().

# Например, результатом выполнения следующего кода:

# print(abs(10))
# print(abs(-7))
# print(abs(0))
# print(abs(-17.67))
# будет:

# 10
# 7
# 0
# 17.67
# Обратите внимание, все три функции max(), min(), abs() работают как с целыми числами, так и с числами с плавающей точкой.

# Наибольшее и наименьшее
# Напишите программу, которая находит наименьшее и наибольшее из пяти чисел.

# Формат входных данных
# На вход программе подается пять целых чисел, каждое на отдельной строке.

# Формат выходных данных
# Программа должна вывести наименьшее и наибольшее число с поясняющей надписью.

# a,b,c,d,e = int(input()),int(input()),int(input()),int(input()),int(input())
# min = min(a,b,c,d,e)
# max = max(a,b,c,d,e)
# print('Наименьшее число =',min)
# print('Наибольшее число =',max)

# Сортировка трёх 🌶️
# Напишите программу, которая упорядочивает три числа от большего к меньшему.

# Формат входных данных
# На вход программе подается три целых числа, каждое на отдельной строке.

# Формат выходных данных
# Программа должна вывести три числа, каждое на отдельной строке, упорядоченных от большего к меньшему.

# a,b,c = int(input()),int(input()),int(input())
# min = min(a,b,c)
# max = max(a,b,c)
# avg = ((a+b+c) - (min+max))
# print(int(max))
# print(int(avg))
# print(int(min))

# Интересное число
# Назовем число интересным, если в нем разность максимальной и минимальной цифры равняется средней по величине цифре. Напишите программу, которая определяет, интересное число или нет. Если число интересное, следует вывести «Число интересное», иначе - «Число неинтересное».

# Формат входных данных
# На вход программе подается целое трехзначное число.

# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# a = int(input())
# a1 = a // 1 % 10
# a2 = a // 10 % 10
# a3 = a // 100 % 10
# min = min(a1,a2,a3)
# max = max(a1,a2,a3)
# avg = ((a1+a2+a3) - (min+max))
# if max - min == avg:
#     print('Число интересное')
# else:print('Число неинтересное')

# Абсолютная сумма
# Даны пять чисел 
# a1+a2+a3+a4+a5
#  , каждое на отдельной строке.

# Формат выходных данных
# Программа должна вывести одно число – сумму модулей введённых чисел.

# a1,a2,a3,a4,a5 = abs(float(input())),abs(float(input())),abs(float(input())),abs(float(input())),abs(float(input()))
# print(float(a1)+(a2)+(a3)+(a4)+(a5))

# Манхэттенское расстояние
# Прогуливаясь по Манхэттену, вы не можете попасть из точки А в точку Б по кратчайшему пути. Если только вы не умеете проходить сквозь стены, вам обязательно придется идти вдоль его параллельно-перпендикулярных улиц.

# На плоскости манхэттенское расстояние между двумя точками 
# (
# �
# 1
# ;
# �
# 2
# )
# (p 
# 1
# ​
#  ;p 
# 2
# ​
#  ) и 
# (
# �
# 1
# ;
# �
# 2
# )
# (q 
# 1
# ​
#  ;q 
# 2
# ​
#  ) определяется так 
# ∣
# �
# 1
# −
# �
# 1
# ∣
# +
# ∣
# �
# 2
# −
# �
# 2
# ∣
# ∣p 
# 1
# ​
#  −q 
# 1
# ​
#  ∣+∣p 
# 2
# ​
#  −q 
# 2
# ​
#  ∣.

# Напишите программу определяющую манхэттенское расстояние между двумя точками, координаты которых заданы.



# p1,p2,q1,q2 = int(input()),int(input()),int(input()),int(input())
# print(abs(p1-q1) + abs(p2-q2))

