# # AND
# #  Предположим, мы написали программу для учеников от двенадцати лет, которые учатся по крайней мере в 
# # 7
# # 7-м классе. Доступ к ней тем, кто младше, надо запретить. Следующий код решает поставленную задачу:

# # age = int(input('Сколько вам лет?: '))
# # grade = int(input('В каком классе вы учитесь?: '))

# # if age >= 12 and grade >= 7:
# #     print('Доступ разрешен.')
# # else:
# #     print('Доступ запрещен.')

# #     Оператор and может объединять произвольное количество условий:

# # age = int(input('Сколько вам лет?: '))
# # grade = int(input('В каком классе вы учитесь?: '))
# # city = input('В каком городе вы живете?: ')

# # if age >= 12 and grade >= 7 and city == 'Москва':
# #     print('Доступ разрешен.')
# # else:
# #     print('Доступ запрещен.')

# # OR

# # Оператор or также применяется для объединения условий. Однако, в отличие от and, для выполнения блока кода достаточно выполнения хотя бы одного из условий.
# # city = input('В каком городе вы живете?: ')
# # if city == 'Москва' or city == 'Санкт-Петербург' or city == 'Екатеринбург':
# #     print('Доступ разрешен.')
# # else:
# #     print('Доступ запрещен.')

# Для того, чтобы выражение or было истинным, требуется, чтобы хотя бы одно условие оператора or было истинным. При этом не имеет значения, истинным или ложным является второе выражение.

# Оператор not
# Оператор not позволяет инвертировать (т.е. заменить на противоположный) результат логического выражения. Например, следующий код:

# age = int(input('Сколько вам лет?: '))

# if not (age < 12):
#     print('Доступ разрешен.')
# else:
#     print('Доступ запрещен.')

# полностью эквивалентен коду:

# age = int(input('Сколько вам лет?: '))

# if age >= 12:
#     print('Доступ разрешен.')
# else:
#     print('Доступ запрещен.')

# Что будет выведено на экран в результате выполнения следующей программы?

# num1 = 34
# num2 = 81
# if num1 // 9 == 0 or num2 % 9 == 0:
#     print('число', num1, 'выиграло')
# else:
#     print('число', num2, 'выиграло')

# Задача 1. Напишите программу, которая определяет, является ли заданное натуральное число трёхзначным.

# Решение. Программа, решающая поставленную задачу, может иметь следующий вид:

# num = int(input())
# if 100 <= num <= 999:     # num >= 100 and num <= 999
#     print('Число является трёхзначным')
# else:
#     print('Число не является трёхзначным')

# Задача 2. Напишите программу, которая проверяет, что все три цифры натурального трёхзначного числа различны.

# Решение. Программа, решающая поставленную задачу, может иметь следующий вид:

# num = int(input())
# d3 = num % 10
# d2 = num % 100 // 10
# d1 = num // 100
# if d3 != d2 and d3 != d1 and d2 != d1:
#     print('Цифры различны')
# else:
#     print('Цифры не различны')

#     Задача 3. Напишите программу, которая по координатам точки, не лежащей на осях координат, определяет номер координатной четверти, в которой она находится.

# Решение. Программа, решающая поставленную задачу, может иметь следующий вид:
# x = int(input())
# y = int(input())

# if x > 0 and y > 0:
#     print('1 четверть')
# if x < 0 and y > 0:
#     print('2 четверть')
# if x < 0 and y < 0:
#     print('3 четверть')
# if x > 0 and y < 0:
#     print('4 четверть')